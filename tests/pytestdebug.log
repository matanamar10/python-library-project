versions pytest-8.2.2, python-3.10.11.final.0
invocation_dir=C:\Users\amarm\PycharmProjects\python-library-project\tests
cwd=C:\Users\amarm\PycharmProjects\python-library-project\tests
args=('test_borrowing_department.py::test_borrow_a_library_item_patron_not_exist', '--debug')

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0x000001A2CFAD22C0>
    pytest_plugin_registered [hook]
        plugin: <Session  exitstatus='<UNSET>' testsfailed=0 testscollected=0>
        plugin_name: session
        manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0x000001A2CFAD22C0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x000001A2D296B700>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x000001A2D296B880>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: faulthandler [assertion]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: pdb [assertion]
    early skip of rewriting module: cmd [assertion]
    early skip of rewriting module: code [assertion]
    early skip of rewriting module: codeop [assertion]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
          plugin_name: 1798766894224
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x000001A2CFAD22C0>
          plugin_name: pytestconfig
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\mark\\__init__.py'>
          plugin_name: mark
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\main.py'>
          plugin_name: main
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\runner.py'>
          plugin_name: runner
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\fixtures.py'>
          plugin_name: fixtures
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\helpconfig.py'>
          plugin_name: helpconfig
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\python.py'>
          plugin_name: python
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\terminal.py'>
          plugin_name: terminal
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\debugging.py'>
          plugin_name: debugging
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\unittest.py'>
          plugin_name: unittest
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\capture.py'>
          plugin_name: capture
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\skipping.py'>
          plugin_name: skipping
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\legacypath.py'>
          plugin_name: legacypath
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\tmpdir.py'>
          plugin_name: tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\monkeypatch.py'>
          plugin_name: monkeypatch
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\recwarn.py'>
          plugin_name: recwarn
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\pastebin.py'>
          plugin_name: pastebin
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\assertion\\__init__.py'>
          plugin_name: assertion
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\junitxml.py'>
          plugin_name: junitxml
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\doctest.py'>
          plugin_name: doctest
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\cacheprovider.py'>
          plugin_name: cacheprovider
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\freeze_support.py'>
          plugin_name: freeze_support
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\setuponly.py'>
          plugin_name: setuponly
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\setupplan.py'>
          plugin_name: setupplan
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\stepwise.py'>
          plugin_name: stepwise
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\warnings.py'>
          plugin_name: warnings
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\logging.py'>
          plugin_name: logging
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\reports.py'>
          plugin_name: reports
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\python_path.py'>
          plugin_name: python_path
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\unraisableexception.py'>
          plugin_name: unraisableexception
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\threadexception.py'>
          plugin_name: threadexception
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\faulthandler.py'>
          plugin_name: faulthandler
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_cov.plugin' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\pytest_cov\\plugin.py'>
          plugin_name: pytest_cov
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=9 _state='suspended' tmpfile=<_io.TextIOWrapper name='<tempfile._TemporaryFileWrapper object at 0x000001A2D15BD210>' mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=11 _state='suspended' tmpfile=<_io.TextIOWrapper name='<tempfile._TemporaryFileWrapper object at 0x000001A2D15BF6D0>' mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=7 _state='started' tmpfile=<_io.TextIOWrapper name='nul' mode='r' encoding='utf-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          plugin_name: capturemanager
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'tests.conftest' from 'C:\\Users\\amarm\\PycharmProjects\\python-library-project\\tests\\conftest.py'>
          plugin_name: C:\Users\amarm\PycharmProjects\python-library-project\tests\conftest.py
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          plugin_name: session
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x000001A2D296B700>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x000001A2D296B880>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_warning_recorded [hook]
          warning_message: {message : DeprecationWarning('pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html'), category : 'DeprecationWarning', filename : 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\mongomock\\__version__.py', lineno : 1, line : None}
          nodeid: 
          when: config
          location: None
      finish pytest_warning_recorded --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x000001A2D2969600>
          plugin_name: terminalreporter
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x000001A2D29FAC20>
          plugin_name: logging-plugin
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
          plugin_name: 1798766894224
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x000001A2CFAD22C0>
          plugin_name: pytestconfig
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\mark\\__init__.py'>
          plugin_name: mark
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\main.py'>
          plugin_name: main
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\runner.py'>
          plugin_name: runner
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\fixtures.py'>
          plugin_name: fixtures
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\helpconfig.py'>
          plugin_name: helpconfig
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\python.py'>
          plugin_name: python
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\terminal.py'>
          plugin_name: terminal
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\debugging.py'>
          plugin_name: debugging
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\unittest.py'>
          plugin_name: unittest
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\capture.py'>
          plugin_name: capture
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\skipping.py'>
          plugin_name: skipping
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\legacypath.py'>
          plugin_name: legacypath
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\tmpdir.py'>
          plugin_name: tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\monkeypatch.py'>
          plugin_name: monkeypatch
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\recwarn.py'>
          plugin_name: recwarn
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\pastebin.py'>
          plugin_name: pastebin
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\assertion\\__init__.py'>
          plugin_name: assertion
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\junitxml.py'>
          plugin_name: junitxml
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\doctest.py'>
          plugin_name: doctest
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\cacheprovider.py'>
          plugin_name: cacheprovider
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\freeze_support.py'>
          plugin_name: freeze_support
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\setuponly.py'>
          plugin_name: setuponly
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\setupplan.py'>
          plugin_name: setupplan
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\stepwise.py'>
          plugin_name: stepwise
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\warnings.py'>
          plugin_name: warnings
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\logging.py'>
          plugin_name: logging
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\reports.py'>
          plugin_name: reports
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\python_path.py'>
          plugin_name: python_path
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\unraisableexception.py'>
          plugin_name: unraisableexception
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\threadexception.py'>
          plugin_name: threadexception
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\faulthandler.py'>
          plugin_name: faulthandler
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_cov.plugin' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\pytest_cov\\plugin.py'>
          plugin_name: pytest_cov
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=9 _state='suspended' tmpfile=<_io.TextIOWrapper name='<tempfile._TemporaryFileWrapper object at 0x000001A2D15BD210>' mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=11 _state='suspended' tmpfile=<_io.TextIOWrapper name='<tempfile._TemporaryFileWrapper object at 0x000001A2D15BF6D0>' mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=7 _state='started' tmpfile=<_io.TextIOWrapper name='nul' mode='r' encoding='utf-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          plugin_name: capturemanager
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'tests.conftest' from 'C:\\Users\\amarm\\PycharmProjects\\python-library-project\\tests\\conftest.py'>
          plugin_name: C:\Users\amarm\PycharmProjects\python-library-project\tests\conftest.py
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          plugin_name: session
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x000001A2D296B700>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x000001A2D296B880>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x000001A2D2969600>
          plugin_name: terminalreporter
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x000001A2D29FAC20>
          plugin_name: logging-plugin
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.fixtures.FixtureManager object at 0x000001A2D296B640>
          plugin_name: funcmanage
          manager: <_pytest.config.PytestPluginManager object at 0x000001A2CEDC9C90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_report_header [hook]
          config: <_pytest.config.Config object at 0x000001A2CFAD22C0>
          start_path: C:\Users\amarm\PycharmProjects\python-library-project\tests
          startdir: C:\Users\amarm\PycharmProjects\python-library-project\tests
      finish pytest_report_header --> [['rootdir: C:\\Users\\amarm\\PycharmProjects\\python-library-project\\tests', 'plugins: cov-5.0.0'], ['using: pytest-8.2.2', 'setuptools registered plugins:', '  pytest-cov-5.0.0 at C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\pytest_cov\\plugin.py']] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
    perform_collect <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0> ['test_borrowing_department.py::test_borrow_a_library_item_patron_not_exist'] [collection]
        pytest_collectstart [hook]
            collector: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        processing argument CollectionArgument(path=WindowsPath('C:/Users/amarm/PycharmProjects/python-library-project/tests/test_borrowing_department.py'), parts=['test_borrow_a_library_item_patron_not_exist'], module_name=None) [collection]
            pytest_collect_directory [hook]
                path: C:\Users\amarm\PycharmProjects\python-library-project\tests
                parent: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> <Package tests> [hook]
            pytest_collectstart [hook]
                collector: <Package tests>
            finish pytest_collectstart --> [] [hook]
            pytest_make_collect_report [hook]
                collector: <Package tests>
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001A2CFAD22C0>
                  collection_path: C:\Users\amarm\PycharmProjects\python-library-project\tests\__init__.py
                  path: C:\Users\amarm\PycharmProjects\python-library-project\tests\__init__.py
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Package tests>
                  file_path: C:\Users\amarm\PycharmProjects\python-library-project\tests\__init__.py
                  path: C:\Users\amarm\PycharmProjects\python-library-project\tests\__init__.py
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001A2CFAD22C0>
                  collection_path: C:\Users\amarm\PycharmProjects\python-library-project\tests\.pytest_cache
                  path: C:\Users\amarm\PycharmProjects\python-library-project\tests\.pytest_cache
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001A2CFAD22C0>
                  collection_path: C:\Users\amarm\PycharmProjects\python-library-project\tests\__pycache__
                  path: C:\Users\amarm\PycharmProjects\python-library-project\tests\__pycache__
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001A2CFAD22C0>
                  collection_path: C:\Users\amarm\PycharmProjects\python-library-project\tests\conftest.py
                  path: C:\Users\amarm\PycharmProjects\python-library-project\tests\conftest.py
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Package tests>
                  file_path: C:\Users\amarm\PycharmProjects\python-library-project\tests\conftest.py
                  path: C:\Users\amarm\PycharmProjects\python-library-project\tests\conftest.py
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001A2CFAD22C0>
                  collection_path: C:\Users\amarm\PycharmProjects\python-library-project\tests\pytestdebug.log
                  path: C:\Users\amarm\PycharmProjects\python-library-project\tests\pytestdebug.log
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Package tests>
                  file_path: C:\Users\amarm\PycharmProjects\python-library-project\tests\pytestdebug.log
                  path: C:\Users\amarm\PycharmProjects\python-library-project\tests\pytestdebug.log
              finish pytest_collect_file --> [] [hook]
              pytest_collect_file [hook]
                  parent: <Package tests>
                  file_path: C:\Users\amarm\PycharmProjects\python-library-project\tests\test_borrowing_department.py
                  path: C:\Users\amarm\PycharmProjects\python-library-project\tests\test_borrowing_department.py
                pytest_pycollect_makemodule [hook]
                    parent: <Package tests>
                    module_path: C:\Users\amarm\PycharmProjects\python-library-project\tests\test_borrowing_department.py
                    path: C:\Users\amarm\PycharmProjects\python-library-project\tests\test_borrowing_department.py
                finish pytest_pycollect_makemodule --> <Module test_borrowing_department.py> [hook]
              finish pytest_collect_file --> [<Module test_borrowing_department.py>] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001A2CFAD22C0>
                  collection_path: C:\Users\amarm\PycharmProjects\python-library-project\tests\test_library.py
                  path: C:\Users\amarm\PycharmProjects\python-library-project\tests\test_library.py
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Package tests>
                  file_path: C:\Users\amarm\PycharmProjects\python-library-project\tests\test_library.py
                  path: C:\Users\amarm\PycharmProjects\python-library-project\tests\test_library.py
                pytest_pycollect_makemodule [hook]
                    parent: <Package tests>
                    module_path: C:\Users\amarm\PycharmProjects\python-library-project\tests\test_library.py
                    path: C:\Users\amarm\PycharmProjects\python-library-project\tests\test_library.py
                finish pytest_pycollect_makemodule --> <Module test_library.py> [hook]
              finish pytest_collect_file --> [<Module test_library.py>] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001A2CFAD22C0>
                  collection_path: C:\Users\amarm\PycharmProjects\python-library-project\tests\test_mongo_handler.py
                  path: C:\Users\amarm\PycharmProjects\python-library-project\tests\test_mongo_handler.py
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Package tests>
                  file_path: C:\Users\amarm\PycharmProjects\python-library-project\tests\test_mongo_handler.py
                  path: C:\Users\amarm\PycharmProjects\python-library-project\tests\test_mongo_handler.py
                pytest_pycollect_makemodule [hook]
                    parent: <Package tests>
                    module_path: C:\Users\amarm\PycharmProjects\python-library-project\tests\test_mongo_handler.py
                    path: C:\Users\amarm\PycharmProjects\python-library-project\tests\test_mongo_handler.py
                finish pytest_pycollect_makemodule --> <Module test_mongo_handler.py> [hook]
              finish pytest_collect_file --> [<Module test_mongo_handler.py>] [hook]
            finish pytest_make_collect_report --> <CollectReport '.' lenresult=3 outcome='passed'> [hook]
            pytest_collectstart [hook]
                collector: <Module test_borrowing_department.py>
            finish pytest_collectstart --> [] [hook]
            pytest_make_collect_report [hook]
                collector: <Module test_borrowing_department.py>
            find_module called for: tests.test_borrowing_department [assertion]
            matched test file (was specified on cmdline): 'C:\\Users\\amarm\\PycharmProjects\\python-library-project\\tests\\test_borrowing_department.py' [assertion]
            found cached rewritten pyc for C:\Users\amarm\PycharmProjects\python-library-project\tests\test_borrowing_department.py [assertion]
            early skip of rewriting module: library_system.management [assertion]
            early skip of rewriting module: library_system.management.borrowing_department [assertion]
            early skip of rewriting module: library_system.management.finance [assertion]
              pytest_pycollect_makeitem [hook]
                  collector: <Module test_borrowing_department.py>
                  name: @py_builtins
                  obj: <module 'builtins' (built-in)>
              finish pytest_pycollect_makeitem --> None [hook]
              pytest_pycollect_makeitem [hook]
                  collector: <Module test_borrowing_department.py>
                  name: @pytest_ar
                  obj: <module '_pytest.assertion.rewrite' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\_pytest\\assertion\\rewrite.py'>
              finish pytest_pycollect_makeitem --> None [hook]
              pytest_pycollect_makeitem [hook]
                  collector: <Module test_borrowing_department.py>
                  name: pytest
                  obj: <module 'pytest' from 'C:\\Users\\amarm\\PycharmProjects\\LibraryManaementProject\\.venv\\lib\\site-packages\\pytest\\__init__.py'>
              finish pytest_pycollect_makeitem --> None [hook]
              pytest_pycollect_makeitem [hook]
                  collector: <Module test_borrowing_department.py>
                  name: borrow_a_library_item
                  obj: <function borrow_a_library_item at 0x000001A2D29F3490>
              finish pytest_pycollect_makeitem --> None [hook]
              pytest_pycollect_makeitem [hook]
                  collector: <Module test_borrowing_department.py>
                  name: return_a_library_item
                  obj: <function return_a_library_item at 0x000001A2D29F31C0>
              finish pytest_pycollect_makeitem --> None [hook]
              pytest_pycollect_makeitem [hook]
                  collector: <Module test_borrowing_department.py>
                  name: test_borrow_a_library_item_success
                  obj: <function test_borrow_a_library_item_success at 0x000001A2D29F2F80>
                pytest_generate_tests [hook]
                    metafunc: <_pytest.python.Metafunc object at 0x000001A2D29BF670>
                finish pytest_generate_tests --> [] [hook]
              finish pytest_pycollect_makeitem --> [<Function test_borrow_a_library_item_success>] [hook]
              pytest_pycollect_makeitem [hook]
                  collector: <Module test_borrowing_department.py>
                  name: test_borrow_a_library_item_patron_not_exist
                  obj: <function test_borrow_a_library_item_patron_not_exist at 0x000001A2D29F3520>
                pytest_generate_tests [hook]
                    metafunc: <_pytest.python.Metafunc object at 0x000001A2D29BF640>
                finish pytest_generate_tests --> [] [hook]
              finish pytest_pycollect_makeitem --> [<Function test_borrow_a_library_item_patron_not_exist>] [hook]
              pytest_pycollect_makeitem [hook]
                  collector: <Module test_borrowing_department.py>
                  name: test_borrow_a_library_item_item_not_exist
                  obj: <function test_borrow_a_library_item_item_not_exist at 0x000001A2D29F35B0>
                pytest_generate_tests [hook]
                    metafunc: <_pytest.python.Metafunc object at 0x000001A2D29BFD30>
                finish pytest_generate_tests --> [] [hook]
              finish pytest_pycollect_makeitem --> [<Function test_borrow_a_library_item_item_not_exist>] [hook]
              pytest_pycollect_makeitem [hook]
                  collector: <Module test_borrowing_department.py>
                  name: test_borrow_a_library_item_already_borrowed
                  obj: <function test_borrow_a_library_item_already_borrowed at 0x000001A2D29F3640>
                pytest_generate_tests [hook]
                    metafunc: <_pytest.python.Metafunc object at 0x000001A2D29BF670>
                finish pytest_generate_tests --> [] [hook]
              finish pytest_pycollect_makeitem --> [<Function test_borrow_a_library_item_already_borrowed>] [hook]
              pytest_pycollect_makeitem [hook]
                  collector: <Module test_borrowing_department.py>
                  name: test_return_a_library_item_success
                  obj: <function test_return_a_library_item_success at 0x000001A2D29F36D0>
                pytest_generate_tests [hook]
                    metafunc: <_pytest.python.Metafunc object at 0x000001A2D29BF640>
                finish pytest_generate_tests --> [] [hook]
              finish pytest_pycollect_makeitem --> [<Function test_return_a_library_item_success>] [hook]
            finish pytest_make_collect_report --> <CollectReport 'test_borrowing_department.py' lenresult=5 outcome='passed'> [hook]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=1 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Function test_borrow_a_library_item_patron_not_exist> [collection]
      pytest_itemcollected [hook]
          item: <Function test_borrow_a_library_item_patron_not_exist>
      finish pytest_itemcollected --> [] [hook]
      pytest_collection_modifyitems [hook]
          session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          config: <_pytest.config.Config object at 0x000001A2CFAD22C0>
          items: [<Function test_borrow_a_library_item_patron_not_exist>]
      finish pytest_collection_modifyitems --> [] [hook]
      pytest_collection_finish [hook]
          session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        pytest_report_collectionfinish [hook]
            config: <_pytest.config.Config object at 0x000001A2CFAD22C0>
            items: [<Function test_borrow_a_library_item_patron_not_exist>]
            start_path: C:\Users\amarm\PycharmProjects\python-library-project\tests
            startdir: C:\Users\amarm\PycharmProjects\python-library-project\tests
        finish pytest_report_collectionfinish --> [] [hook]
      finish pytest_collection_finish --> [] [hook]
    finish pytest_collection --> None [hook]
    pytest_runtestloop [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=1>
      pytest_runtest_protocol [hook]
          item: <Function test_borrow_a_library_item_patron_not_exist>
          nextitem: None
        pytest_runtest_logstart [hook]
            nodeid: test_borrowing_department.py::test_borrow_a_library_item_patron_not_exist
            location: ('test_borrowing_department.py', 15, 'test_borrow_a_library_item_patron_not_exist')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_borrow_a_library_item_patron_not_exist>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='library_items' scope='function' baseid=''>
              request: <SubRequest 'library_items' for <Function test_borrow_a_library_item_patron_not_exist>>
          finish pytest_fixture_setup --> [Book(is_borrowed=False, title='Example', isbn='123456789', author='SnoopDog'), Book(is_borrowed=False, title='Exam', isbn='123456788', author='SnoopDob'), Book(is_borrowed=False, title='SDS', isbn='123321456', author='Panda')] [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='library' scope='function' baseid=''>
              request: <SubRequest 'library' for <Function test_borrow_a_library_item_patron_not_exist>>
          finish pytest_fixture_setup --> library_items={} patrons={} bills={} name='TestLibrary' [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='library_item' scope='function' baseid=''>
              request: <SubRequest 'library_item' for <Function test_borrow_a_library_item_patron_not_exist>>
          finish pytest_fixture_setup --> is_borrowed=False title='Example' isbn='123456789' author='SnoopDog' [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='not_exist_patron' scope='function' baseid=''>
              request: <SubRequest 'not_exist_patron' for <Function test_borrow_a_library_item_patron_not_exist>>
          finish pytest_fixture_setup --> name='Josh' patron_id='123456781' patron_items={} age=30 [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_borrow_a_library_item_patron_not_exist>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'test_borrowing_department.py::test_borrow_a_library_item_patron_not_exist' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_borrowing_department.py::test_borrow_a_library_item_patron_not_exist' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_borrowing_department.py::test_borrow_a_library_item_patron_not_exist' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001A2CFAD22C0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_borrow_a_library_item_patron_not_exist>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_borrow_a_library_item_patron_not_exist>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_borrow_a_library_item_patron_not_exist>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'test_borrowing_department.py::test_borrow_a_library_item_patron_not_exist' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_borrowing_department.py::test_borrow_a_library_item_patron_not_exist' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_borrowing_department.py::test_borrow_a_library_item_patron_not_exist' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001A2CFAD22C0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_borrow_a_library_item_patron_not_exist>
            nextitem: None
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='not_exist_patron' scope='function' baseid=''>
              request: <SubRequest 'not_exist_patron' for <Function test_borrow_a_library_item_patron_not_exist>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='library_item' scope='function' baseid=''>
              request: <SubRequest 'library_item' for <Function test_borrow_a_library_item_patron_not_exist>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='library' scope='function' baseid=''>
              request: <SubRequest 'library' for <Function test_borrow_a_library_item_patron_not_exist>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='library_items' scope='function' baseid=''>
              request: <SubRequest 'library_items' for <Function test_borrow_a_library_item_patron_not_exist>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_borrow_a_library_item_patron_not_exist>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'test_borrowing_department.py::test_borrow_a_library_item_patron_not_exist' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_borrowing_department.py::test_borrow_a_library_item_patron_not_exist' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_borrowing_department.py::test_borrow_a_library_item_patron_not_exist' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001A2CFAD22C0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_borrowing_department.py::test_borrow_a_library_item_patron_not_exist
            location: ('test_borrowing_department.py', 15, 'test_borrow_a_library_item_patron_not_exist')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
    finish pytest_runtestloop --> True [hook]
    pytest_sessionfinish [hook]
        session: <Session  exitstatus=0 testsfailed=0 testscollected=1>
        exitstatus: 0
      pytest_terminal_summary [hook]
          terminalreporter: <_pytest.terminal.TerminalReporter object at 0x000001A2D2969600>
          exitstatus: 0
          config: <_pytest.config.Config object at 0x000001A2CFAD22C0>
      finish pytest_terminal_summary --> [] [hook]
    finish pytest_sessionfinish --> [] [hook]
    pytest_unconfigure [hook]
        config: <_pytest.config.Config object at 0x000001A2CFAD22C0>
    finish pytest_unconfigure --> [] [hook]
